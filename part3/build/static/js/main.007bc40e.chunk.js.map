{"version":3,"sources":["services/requests.js","components/persons.js","components/personform.js","components/filter.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","newPerson","put","delete","status","Persons","persons","setPersons","flt","setColor","setMessage","console","log","selectedPersons","filter","person","name","toLowerCase","includes","handleDelete","window","confirm","personService","newData","setTimeout","catch","map","i","key","number","type","onClick","PersonForm","useState","newName","setNewName","newNum","setNewNum","value","onChange","event","target","preventDefault","find","personID","updated","returnedPersons","Filter","setFlt","Notification","message","color","successStyle","background","borderStyle","fontSize","borderRadius","padding","marginBottom","style","App","useEffect","personsData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.007bc40e.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst clear = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.status)\r\n}\r\n\r\nexport default {getAll, create, update, clear}","import React from 'react'\r\nimport personService from '../services/requests'\r\nconst Persons = ({persons, setPersons, flt, setColor, setMessage}) => {\r\n    console.log(persons)\r\n    const selectedPersons = persons.filter((person)=>{\r\n      return person.name.toLowerCase().includes(flt.toLowerCase())\r\n    })\r\n    const handleDelete = (person) => () => {\r\n      const clear = window.confirm(`Delete ${person.name}?`)\r\n      if(clear)\r\n      personService\r\n        .clear(person.id)\r\n        .then((status) => {\r\n          personService\r\n            .getAll()\r\n            .then(newData => {\r\n              setPersons(newData)\r\n            })\r\n          setColor(\"red\")\r\n          setMessage(`${person.name} has been removed from contacts`)\r\n          setTimeout(()=>setMessage(null), 5000)\r\n        })\r\n        .catch(() => {\r\n          personService\r\n            .getAll()\r\n            .then(newData => setPersons(newData))\r\n          setColor(\"red\")\r\n          setMessage(`${person.name} doesn't exist in contacts`)\r\n          setTimeout(()=>setMessage(null), 5000)\r\n        })\r\n    }\r\n    return selectedPersons.map((person, i) => {\r\n      return (\r\n      <div key={i}>\r\n        {person.name} {person.number}\r\n        <button type=\"delete\" onClick = {handleDelete(person)}>delete</button>\r\n      </div>\r\n    )})\r\n}\r\nexport default Persons","import personService from '../services/requests'\r\nimport React, {useState} from 'react'\r\nconst PersonForm = ({persons, setPersons, setColor, setMessage}) => {\r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNum, setNewNum ] = useState('')\r\n    const onClick = (event) => {\r\n        event.preventDefault()\r\n        const newPerson = {\r\n          name: newName,\r\n          number: newNum\r\n        }\r\n        const person = persons.find((person) => person.name.toLowerCase() === newName.toLowerCase())\r\n        if(person){\r\n          const personID = person.id\r\n          const update = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\r\n          if(update){\r\n          personService\r\n            .update(personID, newPerson)\r\n            .then(updated => {\r\n                setPersons(persons.map(person => person.id !== personID ? person : updated))\r\n            })\r\n            setTimeout(()=>setMessage(null), 5000)\r\n          }\r\n        }\r\n        else{\r\n            personService\r\n                .create(newPerson)\r\n                .then(returnedPersons => {\r\n                    setPersons(returnedPersons)//persons.concat(returnedPersons))\r\n                })\r\n            setColor(\"green\")\r\n            setMessage(`${newPerson.name}'s contact has been added.`)\r\n            setTimeout(()=>setMessage(null), 5000)\r\n        }\r\n        setNewName('')\r\n        setNewNum('')\r\n    }\r\n    const handleNameChange = (event) => setNewName(event.target.value)\r\n    const handleNumChange = (event) => setNewNum(event.target.value)\r\n    return (\r\n        <div>\r\n            <form>\r\n                <div>\r\n                    name:\r\n                    <input \r\n                        value={newName}\r\n                        onChange={handleNameChange}/>\r\n                    <br/>\r\n                    number:\r\n                    <input\r\n                        value={newNum}\r\n                        onChange={handleNumChange} />\r\n                    </div>\r\n                    <div>\r\n                    <button type=\"submit\" onClick={onClick}>add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default PersonForm","import React from 'react'\r\nconst Filter = ({flt, setFlt}) => {\r\n    const handleFltChange = (event) => {\r\n        setFlt(event.target.value)\r\n    }\r\n    return (\r\n        <div>\r\n            <form>\r\n                <div>\r\n                    filter shown with:\r\n                    <input \r\n                        value={flt}\r\n                        onChange={handleFltChange}/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Filter","import React, { useState, useEffect } from 'react'\r\nimport Persons from './components/persons'\r\nimport PersonForm from './components/personform'\r\nimport Filter from './components/filter'\r\nimport personService from './services/requests'\r\nconst Notification = ({message, color}) => {\r\n  if(message === null)\r\n    return null\r\n  const successStyle = {\r\n    color: color,\r\n    background: 'lightgrey',\r\n    borderStyle: 'solid',\r\n    fontSize: 20,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10\r\n  }\r\n  return (\r\n    <div style={successStyle}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([]) \r\n  const [ flt, setFlt ] = useState('')\r\n  const [ message, setMessage ] = useState(null)\r\n  const [ color, setColor ] = useState(\"green\")\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(personsData => {\r\n        setPersons(personsData)\r\n      })\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} color={color}/>\r\n      <Filter flt={flt} setFlt={setFlt}/>\r\n      <h3>Add a new person</h3>\r\n      <PersonForm persons={persons} setPersons={setPersons} setColor={setColor} setMessage={setMessage}/>\r\n      <h3>Numbers</h3>\r\n      <Persons persons={persons} setPersons={setPersons} setColor={setColor} setMessage={setMessage} flt={flt}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}